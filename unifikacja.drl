package sldlib;
import sldlib;
#import System;
#global System.Int32 i;

rule "unifikator"
no-loop true;
when
	v:Vars($vf:nf, $vp:np, $fail:fail)
	pr1:Predykat($nazwa:nazwa, nf==$vf, np == 0, argc >= 1)
	pr2:Predykat(nazwa == $nazwa, var1 == true, np == 0, argc >= 1, nf > $fail)
	not(Unifikator())
then
	v.uform = pr2.nf;
	modify(v);
	assert(new Unifikator(pr2.arg1,null,pr1.arg1,null));
	System.Console.WriteLine("Dodano unifikator {0} = {1} {2}",pr2.arg1,pr1.arg1,pr2.nf);
end

rule "unifikator_2"
no-loop true;
when
	v:Vars($vf:nf, $vp:np)
	pr1:Predykat($nazwa:nazwa, nf==$vf, np == 0, argc == 2)
	pr2:Predykat(nazwa == $nazwa, var2==true, np == 0, argc == 2)
	u:Unifikator(krok == 0)
then
	v.uform = pr2.nf;
	modify(v);
	u.var2 = pr2.arg2;
	u.sub2 = pr1.arg2;
	u.krok++;
	modify(u);
	#assert(new Unifikator(pr2.arg1,null,pr1.arg1,null));
	System.Console.WriteLine("Dodano unifikator {0} = {1}",pr2.arg2,pr1.arg2);
end

rule "unifikator_3"
no-loop true;
when
	v:Vars($vf:nf, $vp:np, $fail:fail)
	pr1:Predykat($nazwa:nazwa, nf==$vf, np == 0, argc >= 1, var1 == true)
	pr2:Predykat(nazwa == $nazwa, var1 == false, np == 0, argc >= 1, nf > $fail)
	not(Unifikator())
then
	v.uform = pr2.nf;
	modify(v);
	assert(new Unifikator(pr1.arg1,null,pr2.arg1,null));
	System.Console.WriteLine("Dodano unifikator {0} = {1}",pr1.arg1,pr2.arg1);
end

rule "unifikator_4"
no-loop true;
when
	v:Vars($vf:nf, $vp:np)
	pr1:Predykat($nazwa:nazwa, nf==$vf, np == 0, argc == 2, var2 == true)
	pr2:Predykat(nazwa == $nazwa, var2 == false, np == 0, argc == 2)
	u:Unifikator(krok == 0)
then
	v.uform = pr2.nf;
	modify(v);
	u.var2 = pr1.arg2;
	u.sub2 = pr2.arg2;
	u.krok++;
	modify(u);
	System.Console.WriteLine("Dodano unifikator {0} = {1}",u.var2,u.sub2);
end

rule "unifikator_5"
no-loop true;
when
	v:Vars($vf:nf, $vp:np, $fail:fail)
	pr1:Predykat($nazwa:nazwa, nf==$vf, np == 0, argc >= 1, var1 == false, $a1:arg1)
	pr2:Predykat(nazwa == $nazwa, var1 == false, np == 0, argc >= 1, arg1 == $a1, nf > $fail)
	not(Unifikator())
then
	v.uform = pr2.nf;
	modify(v);
	assert(new Unifikator(pr1.arg1,null,pr2.arg1,null));
	System.Console.WriteLine("Dodano unifikator {0} = {1}",pr1.arg1,pr2.arg1);
end

rule "unifikator_6"
no-loop true;
when
	v:Vars($vf:nf, $vp:np)
	pr1:Predykat($nazwa:nazwa, nf==$vf, np == 0, argc == 2, var2 == false, $a1:arg1)
	pr2:Predykat(nazwa == $nazwa, var2 == false, np == 0, argc == 2, arg1 == $a1)
	u:Unifikator(krok == 0)
then
	v.uform = pr2.nf;
	modify(v);
	u.var2 = pr1.arg2;
	u.sub2 = pr2.arg2;
	u.krok++;
	modify(u);
	System.Console.WriteLine("Dodano unifikator {0} = {1}",u.var2,u.sub2);
end

rule "dodaj 1"
no-loop;
when
	v:Vars($next:next, $form:uform)
	u:Unifikator(krok == 1)
	p:Predykat(np == $next, argc >= 1, nf == $form)
then
	if (p.arg1 == u.var1) {
		assert(new Predykat(p.nazwa,u.sub1,v.nf-1,v.last));
	}
	else if (p.arg1 == u.var2) {
		assert(new Predykat(p.nazwa,u.sub2,v.nf-1,v.last));
	}
	u.krok++;
	modify(u);
	if (p.argc == 1)
	{
		v.last++;
		v.next++;
		modify(v);
		
	}
//	System.Console.WriteLine("last: {0}, next: {1}",v.last, v.next);
end
		
rule "dodaj 2"
no-loop;
when
	v:Vars($next:next, $form:uform, $last:last, $vf:nf)
	u:Unifikator(krok == 2)
	p:Predykat(np == $next, argc == 2, nf == $form, $nazwa:nazwa)
	nowy:Predykat(np == $last, nf < $vf, nazwa == $nazwa)
then
	if (p.arg2 == u.var1) {
		nowy.argc = 2;
		nowy.arg2 = u.sub1;
		modify(nowy);
		System.Console.WriteLine("OK {0}({1},{2}) nf: {3}, np: {4}",nowy.nazwa,nowy.arg1,u.sub1,nowy.nf,nowy.np);
	}
	else if (p.arg2 == u.var2) {
		nowy.argc = 2;
		nowy.arg2 = u.sub2;
		modify(nowy);
		System.Console.WriteLine("OK {0}({1},{2}) nf: {3}, np: {4}",nowy.nazwa,nowy.arg1,u.sub2,nowy.nf,nowy.np);
	}
	if (p.argc == 2)
	{
		v.last++;
		v.next++;
		modify(v);
	}
	//System.Console.WriteLine("last: {0}, next: {1}",v.last, v.next);
	u.krok--;
	modify(u);	
end

rule "rezolwenta c.d"
no-loop;
when
	u:Unifikator(krok == 3)
	p:Predykat(nazwa:nazwa, f:nf, pp:np, argc >= 1)
	v:Vars($vf:nf == f, next == pp)
then
	if (p.arg1 == u.var1) {
		assert(new Predykat(p.nazwa,u.sub1,v.nf-1,v.last));
		System.Console.WriteLine("{0}({1}), nf: {2}, np: {3}",p.nazwa, u.sub1, p.nf, p.np);
	}
	else if (p.arg1 == u.var2) {
		assert(new Predykat(p.nazwa,u.sub2,v.nf-1,v.last));
		System.Console.WriteLine("{0}({1}), nf: {2}, np: {3}",p.nazwa, u.sub2, p.nf, p.np);
	}
	else {
		assert(new Predykat(p.nazwa,p.arg1,v.nf-1,v.last));
		System.Console.WriteLine("Dodany ...");
	}
	u.krok++;
	modify(u);
	if (p.argc == 1) {
		v.last++;
		v.next++;
		modify(v);
	}	
end

rule "pokaz"
when
	p:Predykat(nf == -1)
then
	System.Console.WriteLine("Predykat: {0}({1},{2}), np: {3}, nf: {4}",p.nazwa,p.arg1,p.arg2, p.np, p.nf);
end

rule "rezolwenta 2"
no-loop;
when
	u:Unifikator(krok == 4)
	p:Predykat(f:nf, pp:np, argc == 2,$nazwa:nazwa)
	v:Vars($vf:nf == f, next == pp, $last:last)
	nowy:Predykat(nf < $vf, np == $last, nazwa == $nazwa)
then
//	System.Console.WriteLine("{0}({1}) nf: {2}, np {3})",nowy.nazwa,nowy.arg1,nowy.nf,nowy.np);
	if (p.arg2 == u.var1) {
		nowy.argc = 2;
		nowy.arg2 = u.sub1;
		modify(nowy);
	System.Console.WriteLine("OK {0}({1},{2}) nf: {3}, np: {4}",nowy.nazwa,nowy.arg1,u.sub1,nowy.nf,nowy.np);
	}
	else if (p.arg2 == u.var2) {
		nowy.argc = 2;
		nowy.arg2 = u.sub2;
		modify(nowy);
		System.Console.WriteLine("OK {0}({1},{2}) nf: {3}, np: {4}",nowy.nazwa,nowy.arg1,u.sub2,nowy.nf,nowy.np);
	}
	else {
		nowy.argc = 2;
		nowy.arg2 = p.arg2;
		modify(nowy);
		System.Console.WriteLine("OK {0}({1},{2}) nf: {3}, np: {4}",nowy.nazwa,nowy.arg1,nowy.arg2,nowy.nf,nowy.np);
	}
	if (p.argc == 2)
	{
		v.last++;
		v.next++;
		modify(v);
	}
	u.krok--;
	modify(u);
end

rule "rezolwenta end"
no-loop;
// salience -1000;
when 
	p:Predykat(f:nf, pp:np, argc == 0, nazwa == "__end")
	v:Vars(nf == f, next == pp)
	u:Unifikator(krok >= 3)
then
	assert(new Predykat("__end",v.nf-1,v.last));
	System.Console.WriteLine("koniec rezolwenty");
end

rule "form end"
no-loop;
when
	p:Predykat(f:nf, pp:np, argc == 0)
	v:Vars(uform == f, next == pp, vf:nf)
	u:Unifikator()
then
	System.Console.WriteLine("OK");
	u.krok = 3;
	modify(u);
 	v.next = 1;
	modify(v);	
end

rule "retract unifikator argc == 1"
no-loop
when
	v:Vars($vf:nf, $vp:np)
	pr1:Predykat($nazwa:nazwa, nf==$vf, np == 0, argc == 1, var1 == false, $a1:arg1)
	pr2:Predykat(nazwa == $nazwa, var1 == false, np == 0, argc == 1, arg1 != $a1)
	u:Unifikator(krok == 0)
then
	retract(u);
	v.nf = 0;
	v.np = 0;
	v.fail = pr2.nf;
	modify(v);
	System.Console.WriteLine("Unifikator usuniety "+u.krok);
end

	

rule "retract unifikator argc == 2"
no-loop
when
	v:Vars($vf:nf, $vp:np)
	pr1:Predykat($nazwa:nazwa, nf==$vf, np == 0, argc == 2, var2 == false, $a1:arg2)
	pr2:Predykat(nazwa == $nazwa, var2 == false, np == 0, argc == 2, arg2 != $a1)
	u:Unifikator(krok == 0)
then
	retract(u);
	v.nf = 0;
	v.np = 0;
	v.fail = pr2.nf;
	modify(v);
	System.Console.WriteLine("Unifikator usuniety "+u.krok);
end
